# install pre-commit hooks:
#   poetry run pre-commit install
# update this file:
#   poetry run pre-commit autoupdate
# apply to all hooks without committing:
#   poetry run pre-commit run --all-files

repos:

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.0.1
  hooks:
      # - id: end-of-file-fixer   # done by 'black'
      # - id: trailing-whitespace # done by 'black'
  - id: mixed-line-ending
  - id: check-case-conflict
  - id: detect-private-key
  - id: check-added-large-files
  - id: check-docstring-first

- repo: https://github.com/asottile/pyupgrade
  rev: v2.19.1
  hooks:
  - id: pyupgrade
    name: Upgrade Python Syntax

- repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  rev: v2.1.0
  hooks:
  - id: pretty-format-yaml
    args: [--autofix, --indent, '2']
  - id: pretty-format-toml
    args: [--autofix]

- repo: local
  hooks:
  - id: isort
    name: Sort Source Files Imports
    entry: poetry run isort
    language: system
    types: [python]
    args: [--profile, black, --filter-files]
    verbose: false
  - id: black
    name: Format Source Files With Black
    description: 'Black: The uncompromising Python code formatter'
    entry: poetry run black
    language: system
    types: [python]
    verbose: false
  - id: user_manual
    name: Update User Manual
    entry: poetry run mkdocs build
    language: system
    pass_filenames: false
    verbose: false
  - id: requirements_txt
    name: Update Requirements
    entry: poetry export -f requirements.txt -o requirements.txt --without-hashes
    language: system
    always_run: true
    pass_filenames: false
    verbose: false
  - id: requirements_dev_txt
    name: Update Dev Requirements
    entry: poetry export --dev -f requirements.txt -o requirements_dev.txt --without-hashes
    language: system
    always_run: true
    pass_filenames: false
    verbose: false
